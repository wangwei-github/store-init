<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- namespace：该XML文件对应哪个接口 -->
<mapper namespace="com.example.demo2.mapper.UserMapper">

	<!-- 插入用户数据 -->
	<!-- Integer insert(User user) -->
	<insert id="insert"
	useGeneratedKeys="true" 
	keyProperty="uid">
	
		INSERT INTO t_user (
		username,password,
		salt,gender,phone,email,
		avatar,is_delete,created_user,
		created_time,modified_user,
		modified_time
		) VALUES (
		#{username},#{password},
		#{salt},#{gender},
		#{phone},#{email},#{avatar},
		#{isDelete},#{createdUser},#{createdTime},
		#{modifiedUser},#{modifiedTime}
		)
		
	</insert>
	
	<!--根据uid,password,modifiedUser,modifiedTime修改密码  -->
	<!-- Integer updateByUid(@Param("uid") Integer uid, @Param("password") String password,
			@Param("modifiedUser") String modifiedUser, @Param("modifiedTime") Date modifiedTime) -->
	<update id="updateByUid">
		UPDATE 
			t_user
		SET
			password=#{password},modified_user=#{modifiedUser},modified_time =#{modifiedTime}
		WHERE
			uid = #{uid}
	
	</update>
	
	<!--根据uid,avatar,modifiedUser,modifiedTime修改用户图像  -->
	<!-- Integer updateAvatar(@Param("uid") Integer uid, @Param("avatar") String avatar,
			@Param("modifiedUser") String modifiedUser, @Param("modifiedTime") Date modifiedTime);-->
	<update id="updateAvatar">
		UPDATE 
			t_user
		SET
			avatar=#{avatar},modified_user=#{modifiedUser},modified_time =#{modifiedTime}
		WHERE
			uid = #{uid}
	</update>
	
	<!-- 根据uid查找用户数据 -->
	<select id="findByUid" resultType="com.example.demo2.entity.User">
			SELECT
				uid,username,password,
				salt,is_delete AS isDelete,
				phone,email,gender,avatar
			FROM
			 	t_user
			 WHERE 
			 	uid=#{uid}
	
	</select>
	
	<update id="updateInfo">
		UPDATE 
			t_user
		SET
			email=#{email},phone=#{phone},
			avatar=#{avatar},modified_user=#{modifiedUser},modified_time =#{modifiedTime}
		WHERE
			uid = #{uid}
	</update>
	
	<!-- 根据用户名查询用户数据 -->
	<!-- User findByUsername(String username) -->
	<select id="findByUsername" resultType="com.example.demo2.entity.User">
	
		SELECT
			uid,username,password,
			salt,is_delete AS isDelete,
			avatar
		FROM
			t_user
		WHERE
			username=#{username}
	
	</select>

</mapper>

